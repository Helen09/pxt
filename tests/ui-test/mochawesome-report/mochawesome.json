{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2020-04-20T08:55:22.474Z",
    "end": "2020-04-20T08:56:54.807Z",
    "duration": 92333,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2cf17a37-512f-476b-bb3f-bba60d94dccc",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7e780239-0b1a-46ac-a8de-cf94a8559e1c",
          "title": "Micro:bit Test",
          "fullFile": "C:\\Users\\v-jianch.FAREAST\\Desktop\\MicroBit\\pxt\\tests\\ui-test\\src\\my-projects\\index.js",
          "file": "\\src\\my-projects\\index.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Micro:bit Test \"before all\" hook",
              "timedOut": false,
              "duration": 10454,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "05c234d1-e68a-42da-9517-6b153cf60b3c",
              "parentUUID": "7e780239-0b1a-46ac-a8de-cf94a8559e1c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Micro:bit Test \"after all\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_website.website.close();",
              "err": {},
              "uuid": "7b0abc05-04da-42f8-adc9-89debcff3a4e",
              "parentUUID": "7e780239-0b1a-46ac-a8de-cf94a8559e1c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Start test Import Project",
              "fullTitle": "Micro:bit Test Start test Import Project",
              "timedOut": false,
              "duration": 10356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "46f0e37e-418b-424c-ba4e-767b82cde526",
              "parentUUID": "7e780239-0b1a-46ac-a8de-cf94a8559e1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "View All Projects",
              "fullTitle": "Micro:bit Test View All Projects",
              "timedOut": false,
              "duration": 46780,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "4796b708-f7a3-4e26-8e58-4e5d46bbbb47",
              "parentUUID": "7e780239-0b1a-46ac-a8de-cf94a8559e1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get the code source",
              "fullTitle": "Micro:bit Test Get the code source",
              "timedOut": false,
              "duration": 24598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "358afff9-38f9-417f-ae65-9d10ccda91a9",
              "parentUUID": "7e780239-0b1a-46ac-a8de-cf94a8559e1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46f0e37e-418b-424c-ba4e-767b82cde526",
            "4796b708-f7a3-4e26-8e58-4e5d46bbbb47",
            "358afff9-38f9-417f-ae65-9d10ccda91a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 81734,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.0"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}